class ASTsequence extends ASTexpression {
    var expressions;

    method eval(context)
    (
    print("{");
    newline();

    let valTmp = incrementAndGet() in
    let ilp_tmp = to_string("ilptmp"+valTmp) in
    let assignDestination = to_string(ilp_tmp+" = ") in
    let c = new Context(assignDestination) in
    //list of expressions
    let current = self.expressions.head in

    (

    print("ILP_Object  ");
    print(ilp_tmp);
    print(";");
    newline();

    while (type_of(current) != "NULL") do
       (
        current.value.eval(c);
        current = current.next;
       )

    print(context.destination);
    print(ilp_tmp);

    )

    print(";");
    newline();
    newline();
    print("}");
    )

}
