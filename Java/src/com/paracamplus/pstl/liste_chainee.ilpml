null = new NULL();

class ListNode extends Object {
    var value;  
    var next;   // pointeur type: ListNode

    method setValue(v) 
        self.value = v;
    

     method setNext(v) 
        self.next = v;
}


class List extends Object{
    var head; //pointeur type: ListNode
    
    method singleton(value) 
        let node = new ListNode(value,new NULL()) in
          new List(node); 
          
    method list_vide()
       new List(new NULL());


    // ajouter valeur a la fin du list
    method add(value) 
        if  type_of(self.head) == "NULL"  then 
            self.head = new ListNode(value, null)
         else 
            let current = self.head in
            let bloc = 
            while (type_of(current.next) != "NULL") do
                current = current.next
                in
            current.setNext(new ListNode(value, null))
        ;

    method contains(value)
    (
        let res = new NULL() in
        let current = self.head in
        (
            while (type_of(current) != "NULL") do
            (
                if(current.value == value)  then res = current.value;
                current = current.next
            );
           if type_of(res) == "NULL" then false else true
        )
    )

    method length()
    (
        let length = 0 in
        let current = self.head in
        (
            while (type_of(current) != "NULL") do
            (
                length = length + 1;
                current = current.next
            );
            length
        )

    )

}

