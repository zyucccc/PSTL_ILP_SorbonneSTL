class Point extends Object
{
    var x;

    method m1 (t)
    self.x * t;
}

class Point2D extends Point
{
    var y;

    method m1 (t)
    self.y * super;
}

let pc = new Point2D(10, 42) in
try 1 + pc.m1(2) catch (e) false

--super: 调用了 父类 m1 方法
1+42(y)*(10*2)
result:841

--------------------------
class Point extends Object
{
    var x;

    method m1 ()
    self.x;
}

class Point2D extends Point
{
    var y;
}

class Point3D extends Point2D
{
    var z;
    method m1 ()
    self.y + self.z * super;
}

let pc = new Point3D(10, 2, 84) in
try pc.m1() catch (e) false

2+84*10
result：842

---------------------------
class Point extends Object
{
    var x;

    method m1 (t,u)
    u + self.x;
}

class Point2D extends Point
{
    var y;
}

class Point3D extends Point2D
{
    var z;
    method m1 (t,u)
    self.y + t + self.z * super;
}

let pc = new Point3D(8, -1, 84) in
try pc.m1(4, 2) catch (e) false

--m1 super调用父类m1 方法,使用的参数还是穿进去的 4 2
-1+4+84*（2+8）
result：843

-----------------------------
class Point extends Object
{
    var x;

    method m1 (u,t)
    u * self.x;
}

class Point2D extends Point
{
    var y;
    method m1 (t,u)
    (u * self.y) + super;
}

class Point3D extends Point2D
{
    var z;
    method m1 (t,u)
    self.z + super;
}

let pc = new Point3D(400, 10, 14) in
try pc.m1(2, 3) catch (e) false


x 400 y 10 z 14
t 2 u 3
u,t t,u 同一个位置的参数值不变，不按照 u t 的顺序
14+(3*10)+(2*400)
result:844

---------------------------------
class Point extends Object
{
    var x;

    method m1 (tt,uu)
    tt * self.x;
}

class Point2D extends Point
{
    var y;

    method m1 (ttt,uuu)
    (uuu * self.y) + super;
}

class Point3D extends Point2D
{
    var z;

    method m1 (t,u)
    self.z + super;
}

let pc = new Point3D(400, 10, 15) in
try pc.m1(2, 3) catch (e) false

x 400 y 10 z 15
15+(3*10)+(2*400)
result:845

---------------------------
class Point extends Object
{
    var x;

    method m1 (tt,uu)
    tt * self.x;
}

class Point2D extends Point
{
    var y;

    method m1 (ttt,uuu)
    (uuu * self.y) + super;
}

class Point3D extends Point2D
{
    var z;

    method m1 (t,u)
    self.z;
}

class Point4D extends Point3D
{
    var t;

    method m1 (tt,uu)
    self.t + super;
}

let pc4 = new Point4D(-1, -2, 400, 16)
and pc2 = new Point2D(20, 1) in
try pc4.m1(-3, -4) + pc2.m1(20, 30) catch (e) false

result:846

-------------------------------
class Point extends Object
{
    var x;
    method m1 (tt,uu)
    tt * self.x;
}

class Point2Da extends Point
{
    var y;
    method m1 (ttt,uuu)
    (uuu * self.y) + super;
}

class Point3Da extends Point2Da
{
    var z;

    method m1 (tt,uu)
    self.z + super;
}

class Point2Db extends Point
{
    var yy;

    method m1 (t,u)
    (u * self.yy) * super;
}

class Point3Db extends Point2Db
{
    var zz;

    method m1 (tt,uu)
    self.zz * super;
}

let pc4 = new Point3Da(-2, 100, 23)
and pc2 = new Point3Db(20, 1, 5) in
try pc4.m1(3, 4) + pc2.m1(2, 3) + -170 catch (e) false

result:847

------------------------------
class Point extends Object
{
    var x;

    method m1 (tt,uu)
    tt * self.x;
}

class Point2Da extends Point
{
    var y;

    method m1 (ttt,uuu)
    uuu * self.y;
}

class Point3Da extends Point2Da
{
    var z;

    method m1 (tt,uu)
    self.z + super;
}

class Point2Db extends Point
{
    var yy;

    method m1 (t,u)
    u * self.yy;
}

class Point3Db extends Point2Db
{
    var zz;

    method m1 (tt,uu)
    self.zz * super;
}

let pc4 = new Point3Da(-2, 100, 23)
and pc2 = new Point3Db(20, 10, 5) in
try 275 + pc4.m1(3, 4) + pc2.m1(2, 3) catch (e) false

275+ 23+(4*100) + (5*(3*10))
result:848